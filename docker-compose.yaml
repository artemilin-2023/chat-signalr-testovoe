services:
  backend:
    build: 
      context: src/backend
      dockerfile: Dockerfile
    networks:
      - chat-testovoe
    ports:
      - 8080:8080
      - 8081:8081
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  postgres:
    image: postgres
    container_name: postgres
    environment:
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=database
    networks:
      - chat-testovoe
    ports:
      - 5432:5432
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d database"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s

  redis:
    image: redis:latest
    networks:
      - chat-testovoe
    ports:
      - 6379:6379
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres-data:
  pgadmin-data:
  redis-data:

networks:
  chat-testovoe:
    name: chat-testovoe
    driver: bridge
